{"ast":null,"code":"var _jsxFileName = \"D:\\\\vscode\\\\\\u524D\\u7AEF\\\\react\\\\my-project\\\\src\\\\component\\\\LongList.js\";\nimport React, { Component } from 'react';\nimport { ListView, Flex, WingBlank } from 'antd-mobile';\nimport IMG from '../component/IMG';\nimport { Link } from 'react-router';\nconst data = [{\n  id: 3,\n  img: 't0110974b6f051c1e5a.gif',\n  title: ' React库',\n  des: 'React 使创建交互式 UI 变得轻而易举'\n}, {\n  id: 2,\n  img: 't0177ec8627c04e438b.gif',\n  title: 'Vue框架',\n  des: 'Vue框架适用于大中型项目'\n}, {\n  id: 1,\n  img: 't0135a6567622271196.gif',\n  title: 'Node平台',\n  des: 'Node.js 是一个开源与跨平台的 JavaScript 运行时环境。 它是一个可用于几乎任何项目的流行工具！'\n}];\nconst NUM_ROWS = 8;\nlet pageIndex = 0;\n\nfunction genData(pIndex = 0) {\n  const dataBlob = {};\n\n  for (let i = 0; i < NUM_ROWS; i++) {\n    const ii = pIndex * NUM_ROWS + i;\n    dataBlob[`${ii}`] = `row - ${ii}`;\n  }\n\n  return dataBlob;\n}\n\nexport default class LongList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onEndReached = event => {\n      // load new data\n      // hasMore: from backend data, indicates whether it is the last page, here is false\n      if (this.state.isLoading && !this.state.hasMore) {\n        return;\n      }\n\n      this.setState({\n        isLoading: true\n      });\n      setTimeout(() => {\n        this.rData = { ...this.rData,\n          ...genData(++pageIndex)\n        }; // 控制滚动次数\n\n        if (pageIndex < 3) {\n          this.setState({\n            dataSource: this.state.dataSource.cloneWithRows(this.rData),\n            isLoading: false\n          }); // 滚动次数限制了的次数后返回 false \n        } else if (pageIndex == 3) {\n          this.setState({\n            isLoading: false\n          });\n        }\n      }, 1000);\n    };\n\n    const dataSource = new ListView.DataSource({\n      rowHasChanged: (row1, row2) => row1 !== row2\n    });\n    this.state = {\n      dataSource,\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    // 模拟ajax\n    setTimeout(() => {\n      this.rData = genData();\n      this.setState({\n        dataSource: this.state.dataSource.cloneWithRows(this.rData),\n        isLoading: false\n      });\n    }, 600);\n  } // 触发滚动时间再重新渲染\n\n\n  render() {\n    let index = data.length - 1;\n\n    const row = (rowData, sectionID, rowID) => {\n      if (index < 0) {\n        index = data.length - 1;\n      }\n\n      const obj = data[index--];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(WingBlank, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(WingBlank, {\n        size: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 46\n        }\n      })), /*#__PURE__*/React.createElement(Flex, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Flex.Item, {\n        align: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"img-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(IMG, {\n        src: obj.img,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 59\n        }\n      }))), /*#__PURE__*/React.createElement(Flex.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/DetailPage/\" + obj.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 68\n        }\n      }, obj.title)), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          lineHeight: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 33\n        }\n      }, obj.des)))));\n    };\n\n    return /*#__PURE__*/React.createElement(ListView, {\n      dataSource: this.state.dataSource,\n      className: \"am-list sticky-list\",\n      useBodyScroll: true,\n      renderRow: row,\n      renderFooter: () => /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          padding: 30,\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 38\n        }\n      }, this.state.isLoading ? '耐心一点...' : '我也是有底线的') // scrollEventThrottle={200}\n      ,\n      onEndReached: this.onEndReached // onEndReachedThreshold={10}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["D:/vscode/前端/react/my-project/src/component/LongList.js"],"names":["React","Component","ListView","Flex","WingBlank","IMG","Link","data","id","img","title","des","NUM_ROWS","pageIndex","genData","pIndex","dataBlob","i","ii","LongList","constructor","props","onEndReached","event","state","isLoading","hasMore","setState","setTimeout","rData","dataSource","cloneWithRows","DataSource","rowHasChanged","row1","row2","componentDidMount","render","index","length","row","rowData","sectionID","rowID","obj","lineHeight","padding","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { ListView, Flex, WingBlank } from 'antd-mobile';\r\nimport IMG from '../component/IMG'\r\nimport { Link } from 'react-router'\r\nconst data = [\r\n    {\r\n        id: 3,\r\n        img: 't0110974b6f051c1e5a.gif',\r\n        title: ' React库',\r\n        des: 'React 使创建交互式 UI 变得轻而易举',\r\n    },\r\n    {\r\n        id: 2,\r\n        img: 't0177ec8627c04e438b.gif',\r\n        title: 'Vue框架',\r\n        des: 'Vue框架适用于大中型项目',\r\n    },\r\n    {\r\n        id: 1,\r\n        img: 't0135a6567622271196.gif',\r\n        title: 'Node平台',\r\n        des: 'Node.js 是一个开源与跨平台的 JavaScript 运行时环境。 它是一个可用于几乎任何项目的流行工具！',\r\n    },\r\n];\r\n\r\nconst NUM_ROWS = 8;\r\nlet pageIndex = 0;\r\n\r\nfunction genData(pIndex = 0) {\r\n    const dataBlob = {};\r\n    for (let i = 0; i < NUM_ROWS; i++) {\r\n        const ii = (pIndex * NUM_ROWS) + i;\r\n        dataBlob[`${ii}`] = `row - ${ii}`;\r\n    }\r\n    return dataBlob;\r\n}\r\n\r\nexport default class LongList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const dataSource = new ListView.DataSource({\r\n\r\n            rowHasChanged: (row1, row2) => row1 !== row2,\r\n\r\n        });\r\n\r\n        this.state = {\r\n            dataSource,\r\n            isLoading: true,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // 模拟ajax\r\n        setTimeout(() => {\r\n            this.rData = genData();\r\n            this.setState({\r\n                dataSource: this.state.dataSource.cloneWithRows(this.rData),\r\n                isLoading: false,\r\n            });\r\n        }, 600);\r\n    }\r\n    // 触发滚动时间再重新渲染\r\n    onEndReached = (event) => {\r\n        // load new data\r\n        // hasMore: from backend data, indicates whether it is the last page, here is false\r\n        if (this.state.isLoading && !this.state.hasMore) {\r\n            return;\r\n        }\r\n        this.setState({ isLoading: true });\r\n        setTimeout(() => {\r\n            this.rData = { ...this.rData, ...genData(++pageIndex) };\r\n            // 控制滚动次数\r\n            if (pageIndex < 3) {\r\n                this.setState({\r\n                    dataSource: this.state.dataSource.cloneWithRows(this.rData),\r\n                    isLoading: false,\r\n                });\r\n                // 滚动次数限制了的次数后返回 false \r\n            } else if (pageIndex == 3) {\r\n                this.setState({ isLoading: false });\r\n            }\r\n\r\n\r\n        }, 1000);\r\n    }\r\n\r\n\r\n    render() {\r\n        let index = data.length - 1;\r\n        const row = (rowData, sectionID, rowID) => {\r\n            if (index < 0) {\r\n                index = data.length - 1;\r\n            }\r\n            const obj = data[index--];\r\n            return (\r\n                <div className=\"flex-item\">\r\n                    <WingBlank >\r\n                        <WingBlank size=\"sm\"><hr /></WingBlank>\r\n                        <Flex>\r\n\r\n                            <Flex.Item align=\"start\">\r\n                                <div className=\"img-list\"><IMG src={obj.img} /></div>\r\n\r\n                            </Flex.Item>\r\n                            <Flex.Item>\r\n                                <Link to={\"/DetailPage/\" + obj.id}><h4>{obj.title}</h4></Link>\r\n                                <div style={{ lineHeight: \"20px\" }}>{obj.des}</div>\r\n                            </Flex.Item>\r\n                        </Flex>\r\n                    </WingBlank>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <ListView\r\n\r\n                dataSource={this.state.dataSource}\r\n                className=\"am-list sticky-list\"\r\n                useBodyScroll\r\n\r\n                renderRow={row}\r\n\r\n                renderFooter={() => (<div style={{ padding: 30, textAlign: 'center' }}>\r\n                    {this.state.isLoading ? '耐心一点...' : '我也是有底线的'}\r\n                </div>)}\r\n\r\n                // scrollEventThrottle={200}\r\n                onEndReached={this.onEndReached}\r\n            // onEndReachedThreshold={10}\r\n            />\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
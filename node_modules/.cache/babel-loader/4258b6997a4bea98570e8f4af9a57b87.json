{"ast":null,"code":"var _jsxFileName = \"D:\\\\vscode\\\\\\u524D\\u7AEF\\\\react\\\\my-project\\\\src\\\\component\\\\LongList.js\";\nimport React, { Component } from 'react';\nimport { ListView } from 'antd-mobile';\nconst data = [{\n  img: 't0110974b6f051c1e5a.gif',\n  title: '用于构建用户界面的 JavaScript 库',\n  des: 'React 使创建交互式 UI 变得轻而易举'\n}, {\n  img: 't0177ec8627c04e438b.gif',\n  title: '小米新品发布会定档 MIX新品亮相',\n  des: 'Yeelight智能LED灯丝灯发布：复古设计 亮度可调'\n}, {\n  img: 't0135a6567622271196.gif',\n  title: 'iPhone11开始出货 本周五发售',\n  des: '首批售卖的iPhone 11、iPhone 11 Pro和iPhone 11 Pro Max已经从工厂送出'\n}];\nexport default class LongList extends Component {\n  constructor(props) {\n    super(props);\n\n    const getSectionData = (dataBlob, sectionID) => dataBlob[sectionID];\n\n    const getRowData = (dataBlob, sectionID, rowID) => dataBlob[rowID];\n\n    const dataSource = new ListView.DataSource({\n      getRowData,\n      getSectionHeaderData: getSectionData,\n      rowHasChanged: (row1, row2) => row1 !== row2,\n      sectionHeaderHasChanged: (s1, s2) => s1 !== s2\n    });\n    this.state = {\n      dataSource,\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    // you can scroll to the specified position\n    // setTimeout(() => this.lv.scrollTo(0, 120), 800);\n    // simulate initial Ajax\n    setTimeout(() => {\n      genData();\n      this.setState({\n        dataSource: this.state.dataSource.cloneWithRowsAndSections(dataBlobs, sectionIDs, rowIDs),\n        isLoading: false\n      });\n    }, 600);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ListView, {\n      ref: el => this.lv = el,\n      dataSource: this.state.dataSource,\n      className: \"am-list sticky-list\",\n      useBodyScroll: true,\n      renderSectionWrapper: sectionID => /*#__PURE__*/React.createElement(StickyContainer, {\n        key: `s_${sectionID}_c`,\n        className: \"sticky-container\",\n        style: {\n          zIndex: 4\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }\n      }),\n      renderSectionHeader: sectionData => /*#__PURE__*/React.createElement(Sticky, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      }, ({\n        style\n      }) => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"sticky\",\n        style: { ...style,\n          zIndex: 3,\n          backgroundColor: parseInt(sectionData.replace('Section ', ''), 10) % 2 ? '#5890ff' : '#F8591A',\n          color: 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 33\n        }\n      }, `Task ${sectionData.split(' ')[1]}`)),\n      renderHeader: () => /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 37\n        }\n      }, \"header\"),\n      renderFooter: () => /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          padding: 30,\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 38\n        }\n      }, this.state.isLoading ? 'Loading...' : 'Loaded'),\n      renderRow: row,\n      renderSeparator: separator,\n      pageSize: 4,\n      onScroll: () => {\n        console.log('scroll');\n      },\n      scrollEventThrottle: 200,\n      onEndReached: this.onEndReached,\n      onEndReachedThreshold: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["D:/vscode/前端/react/my-project/src/component/LongList.js"],"names":["React","Component","ListView","data","img","title","des","LongList","constructor","props","getSectionData","dataBlob","sectionID","getRowData","rowID","dataSource","DataSource","getSectionHeaderData","rowHasChanged","row1","row2","sectionHeaderHasChanged","s1","s2","state","isLoading","componentDidMount","setTimeout","genData","setState","cloneWithRowsAndSections","dataBlobs","sectionIDs","rowIDs","render","el","lv","zIndex","sectionData","style","backgroundColor","parseInt","replace","color","split","padding","textAlign","row","separator","console","log","onEndReached"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { ListView } from 'antd-mobile';\r\nconst data = [\r\n    {\r\n        img: 't0110974b6f051c1e5a.gif',\r\n        title: '用于构建用户界面的 JavaScript 库',\r\n        des: 'React 使创建交互式 UI 变得轻而易举',\r\n    },\r\n    {\r\n        img: 't0177ec8627c04e438b.gif',\r\n        title: '小米新品发布会定档 MIX新品亮相',\r\n        des: 'Yeelight智能LED灯丝灯发布：复古设计 亮度可调',\r\n    },\r\n    {\r\n        img: 't0135a6567622271196.gif',\r\n        title: 'iPhone11开始出货 本周五发售',\r\n        des: '首批售卖的iPhone 11、iPhone 11 Pro和iPhone 11 Pro Max已经从工厂送出',\r\n    },\r\n];\r\nexport default class LongList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const getSectionData = (dataBlob, sectionID) => dataBlob[sectionID];\r\n        const getRowData = (dataBlob, sectionID, rowID) => dataBlob[rowID];\r\n\r\n        const dataSource = new ListView.DataSource({\r\n            getRowData,\r\n            getSectionHeaderData: getSectionData,\r\n            rowHasChanged: (row1, row2) => row1 !== row2,\r\n            sectionHeaderHasChanged: (s1, s2) => s1 !== s2,\r\n        });\r\n\r\n        this.state = {\r\n            dataSource,\r\n            isLoading: true,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // you can scroll to the specified position\r\n        // setTimeout(() => this.lv.scrollTo(0, 120), 800);\r\n\r\n        // simulate initial Ajax\r\n        setTimeout(() => {\r\n            genData();\r\n            this.setState({\r\n                dataSource: this.state.dataSource.cloneWithRowsAndSections(dataBlobs, sectionIDs, rowIDs),\r\n                isLoading: false,\r\n            });\r\n        }, 600);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ListView\r\n                ref={el => this.lv = el}\r\n                dataSource={this.state.dataSource}\r\n                className=\"am-list sticky-list\"\r\n                useBodyScroll\r\n                renderSectionWrapper={sectionID => (\r\n                    <StickyContainer\r\n                        key={`s_${sectionID}_c`}\r\n                        className=\"sticky-container\"\r\n                        style={{ zIndex: 4 }}\r\n                    />\r\n                )}\r\n                renderSectionHeader={sectionData => (\r\n                    <Sticky>\r\n                        {({\r\n                            style,\r\n                        }) => (\r\n                                <div\r\n                                    className=\"sticky\"\r\n                                    style={{\r\n                                        ...style,\r\n                                        zIndex: 3,\r\n                                        backgroundColor: parseInt(sectionData.replace('Section ', ''), 10) % 2 ?\r\n                                            '#5890ff' : '#F8591A',\r\n                                        color: 'white',\r\n                                    }}\r\n                                >{`Task ${sectionData.split(' ')[1]}`}</div>\r\n                            )}\r\n                    </Sticky>\r\n                )}\r\n                renderHeader={() => <span>header</span>}\r\n                renderFooter={() => (<div style={{ padding: 30, textAlign: 'center' }}>\r\n                    {this.state.isLoading ? 'Loading...' : 'Loaded'}\r\n                </div>)}\r\n                renderRow={row}\r\n                renderSeparator={separator}\r\n                pageSize={4}\r\n                onScroll={() => { console.log('scroll'); }}\r\n                scrollEventThrottle={200}\r\n                onEndReached={this.onEndReached}\r\n                onEndReachedThreshold={10}\r\n            />\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}